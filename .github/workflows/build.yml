name: build-push-deploy
on:
  push:
    paths:
      - .github/**
      - scripts/**
      - src/**
      - docker-compose-prod.yml
      - Dockerfile
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_SERVER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/map-reservation-api-server:${{ github.sha }}
    steps:
      # build, push steps
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Set test environment
        run: |
          sh scripts/test.sh

      - name: Docker login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4.3.0
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build and push docker images
        uses: docker/build-push-action@v5.2.0
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ env.API_SERVER_IMAGE_NAME }}

      # deploy steps
      - name: Copy script, docker compose files
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }} # 퍼블릭 ip
          username: ${{ secrets.SERVER_USERNAME }} # 계정명
          key: ${{ secrets.SERVER_KEY }} # raw contents of private key
          source: "docker-compose-prod.yml,scripts/prod.sh"
          target: "map-reservation"

      - name: Docker compose up
        uses: appleboy/ssh-action@v1.0.3
        env:
          API_SERVER_IMAGE_NAME: ${{ env.API_SERVER_IMAGE_NAME }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          NAVER_MAPS_API_KEY_ID: ${{ secrets.NAVER_MAPS_API_KEY_ID }}
          NAVER_MAPS_API_KEY: ${{ secrets.NAVER_MAPS_API_KEY }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          envs: API_SERVER_IMAGE_NAME,DB_URL,DB_USERNAME,DB_PASSWORD,NAVER_MAPS_API_KEY_ID,NAVER_MAPS_API_KEY,CORS_ALLOWED_ORIGINS,REDIS_HOST,REDIS_PORT
          script: |
            cd map-reservation
            sh scripts/prod.sh
